version: "3"

services:
  staging:
    env_file:
      - .env
    container_name: staging
    image: 'staging-server'
    build:
      context: ./docker/nginx/staging
    ports:
      - ${STAGING_PORT}:80
    restart: unless-stopped
    depends_on:
      - php
    volumes:
      - "./docker/nginx/staging/default.conf:/etc/nginx/conf.d/default.conf"
      - "./docker/nginx/staging/logs/:/var/log/nginx"
      - "./filesystem/staging:/var/www/html"

  production:
    env_file:
      - .env
    container_name: production
    image: 'production-server'
    build:
      context: ./docker/nginx/production
    ports:
      - ${PRODUCTION_PORT}:80
    restart: unless-stopped
    depends_on:
      - php
    volumes:
      - "./docker/nginx/production/default.conf:/etc/nginx/conf.d/default.conf"
      - "./docker/nginx/production/logs/:/var/log/nginx"
      - "./filesystem/production:/var/www/html"

  php:
    env_file:
      - .env
    container_name: php
    image: 'php'
    build:
      context: ./docker/php
    ports:
      - ${PHP_PORT}:9000
    restart: unless-stopped
    volumes:
      - "./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini"
      - "./filesystem/staging:/var/www/html/staging"
      - "./filesystem/production:/var/www/html/production"

  mysql:
    env_file:
      - .env
    container_name: mysql
    image: 'mysql'
    build:
      context: ./docker/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER:}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - "./docker/mysql/my.conf:/etc/mysql/conf.d/my.cnf"
      - "./docker/mysql/logs:/var/log/mysql"
      - ci-cd-workflow:/var/lib/mysql

  jenkins:
    container_name: jenkins
    image: jenkins
    build:
      context: ./docker/jenkins
    ports:
      - ${JENKINS_PORT}:8080
    volumes:
      - "./docker/jenkins/data:/var/jenkins_home"

  prometheus:
    env_file:
      - .env
    container_name: prometheus
    image: prometheus
    restart: unless-stopped
    build:
      context: ./docker/prometheus
    ports:
      - ${PROMETHEUS_PORT}:9090
    volumes:
      - "./docker/prometheus/config:/etc/prometheus"
      - "./docker/prometheus/data:/prometheus"


volumes:
  ci-cd-workflow: